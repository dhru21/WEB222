Name: Dhruv Bipinbhai Patel
Student#: 142572197
StudentID: dbpatel31

Q1 a. 
function sumStrings(one,two,three)
{
    let sum = 0;
    sum = Number(one) + Number(two) + Number(three);
    return sum;
}

console.log(sumStrings("1","2","3"));

Q1 b.
var sumStrings = function(one,two,three)
{
    return Number(one) + Number(two) + Number(three);
}

console.log(sumStrings("1","2","3"));

Q2.
function roll(num)
{
    let die;
    if(num > 0)
    {
        die = Math.floor(Math.random() * num) + 1;
    }
    else
    {
        die = Math.floor(Math.random() * 6) + 1;
    }

    return die;
}

console.log(roll());

Q3.
function average()
{
    let count = arguments.length;
    let total = 0;
    let i;
    for(i=0;i<count;i++)
    {
        total += arguments[i];
    }
    return total/count;
}

console.log("Average is " + average(256, 8, 32, 128, 16, 1024));

Q4.
function createFn(factor) 
{
    return function(value) 
    {
        return value * factor;
    };
}

let fn = createFn(10); 
console.log(fn(6));

Here, createFn function takes an argument "factor", the initial value to use for createFn function. createFn is returning an anonymous function which takes a value "value" and multiplies it to "factor" before returning. The "fn" function is created by invoking "createFn" with initial value of 10. The function that is returned by createFn has access to "factor" in its parent's scope. A closure is created to capture the variable "factor" in a scope that is attached to a function which is created and returned. 